import pandas as pd
import nltk
import string
from nltk.corpus import stopwords
nltk.download('stopwords')

# Sample DataFrame with comment data
data = {
    'original_comment': [
        "This is a sample comment with punctuation! and extra characters.",
        "Another comment; it has @special symbols and unnecessary words."
    ]
}

df = pd.DataFrame(data)

# Function to clean text
def clean_text(text):
    # Remove punctuation
    text = text.translate(str.maketrans('', '', string.punctuation))
    
    # Convert to lowercase and tokenize
    tokens = nltk.word_tokenize(text.lower())
    
    # Remove stopwords
    stop_words = set(stopwords.words('english'))
    tokens = [word for word in tokens if word not in stop_words]
    
    # Join tokens back into a clean text string
    clean_text = ' '.join(tokens)
    
    return clean_text

# Apply cleaning function to DataFrame
df['clean_comment'] = df['original_comment'].apply(clean_text)

# Create columns for original and cleaned comment lengths
df['original_comment_length'] = df['original_comment'].apply(len)
df['cleaned_comment_length'] = df['clean_comment'].apply(len)

# Display the DataFrame
print(df)
